package com.frame.net.netty;

import java.nio.charset.Charset;

import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelStateEvent;
import org.jboss.netty.handler.codec.frame.FrameDecoder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.frame.OnlinePlayerManager;

public class StringDecoder extends FrameDecoder {

	private static Logger log = LoggerFactory.getLogger(StringDecoder.class);

	@Override
	protected Object decode(ChannelHandlerContext cxt, Channel channel,
			ChannelBuffer buffer) throws Exception {
		int readCount = buffer.readableBytes();
		if (readCount <= 0) {
			return null;
		}
		int readIdx = buffer.readerIndex();
		
		String recvStr = buffer.toString(Charset.defaultCharset());
		System.out.println("Recv info: " + recvStr);
		int linePos = recvStr.indexOf('\n');
		System.out.println("Recv Pos: " + linePos);
		if (linePos < 0) {
            buffer.readerIndex(readIdx);
			return null;
		}
		
		String cmdStr = recvStr.substring(0, linePos);
		System.out.println("CMD: " + cmdStr);
		buffer.readerIndex(readIdx + cmdStr.length() + 1);

		return cmdStr;
	}

	/**
	 * 
	 * @see org.jboss.netty.handler.codec.frame.FrameDecoder#channelClosed(org.jboss.netty.channel.ChannelHandlerContext,
	 *      org.jboss.netty.channel.ChannelStateEvent)
	 */
	@Override
	public void channelClosed(ChannelHandlerContext ctx, ChannelStateEvent e)
			throws Exception {
		super.channelClosed(ctx, e);
		try {
			// OnlinePlayerManager.getIntance().remove(ctx.getChannel());
			OnlinePlayerManager.getIntance().addRemoveEventJob(ctx);
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}

	/**
	 * 
	 * @see org.jboss.netty.channel.SimpleChannelUpstreamHandler#channelConnected(org.jboss.netty.channel.ChannelHandlerContext,
	 *      org.jboss.netty.channel.ChannelStateEvent)
	 */
	@Override
	public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e)
			throws Exception {
		super.channelConnected(ctx, e);
		try {
			OnlinePlayerManager.getIntance().addGameSession(ctx.getChannel());
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}
}
